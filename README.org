Vimrc README -*- mode: org -*-

#+TITLE: My Vim & Emacs Configs
#+AUTUOR: YinJian
#+DATE: 2021.05.12
#+EMAIL: beamiter@163.com
#+KEYWORDS: Vim, Emacs, LSP
#+LANGUAGE: Vimscript, Eclisp

* *Install vim to support python2/3*
Install vim-gtk or vim-gnome first to support compiling with gui.
#+BEGIN_SRC shell
sudo apt-get build-dep vim-gnome

./configure --with-features=huge \
            --enable-multibyte \
            --enable-gui=auto \
            --with-x \
            --enable-rubyinterp=yes \
            --enable-python3interp=yes \
            --enable-perlinterp=yes \
            --enable-fontset \
            --enable-cscope \
            --enable-gtk2-check \
            --enable-gnome-check \
            --prefix=/usr \
            --enable-luainterp=yes \
            --enable-fail-if-missing \

or

./configure --with-features=huge \
            --enable-multibyte \
            --enable-gui=auto \
            --with-x \
            --enable-python3interp=yes \
            --enable-fontset \
            --enable-cscope \
            --enable-gtk2-check \
            --enable-gnome-check \
            --prefix=/usr \
            --enable-luainterp=yes \
            --enable-fail-if-missing \

make

sudo make install
#with-python3-config-dir is deprecated
            #--with-python3-config-dir=/usr/lib/python3.7/config-3.7m-x86_64-linux-gnu \
#+END_SRC

* *Install python related package*
#+BEGIN_SRC shell
pip3 install --user flake8 autoflake isort coverage yapf autopep8 pylint
conda install flake8 autoflake isort coverage yapf autopep8 pylint
pip3 install python-language-server
#+END_SRC

* *Install rust lsp*
Install rust-analyzer from github release.
#+BEGIN_SRC shell
rustup component add rls rust-analysis rust-src
#+END_SRC

* *Some helpful tips*
1. Install *bat* to support highlight color in fzf preview.
2. Install latest *clangd* version to have better experience.
3. Popular wm: *i3, herbstluft, awesome, spectrwm, bspwm, qtile, xmonad, leftwm*.
4. Helpful toolkits: *dmenu, feh, scrot, flameshot, shutter*.
5. Set git proxy: *git clone -c http.proxy=http://127.0.0.1:7890*
6. Set terminal proxy: *export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890*
7. Setup bspwm:
  #+BEGIN_SRC shell
      cp /usr/share/doc/bspwm/examples/bspwmrc $HOME/.config/bspwm/
      cp /usr/share/doc/bspwm/examples/sxhkdrc $HOME/.config/sxhkd/

      #Edit $HOME/.xsessionrc
      sxhkd &
      exec bspwm
  #+END_SRC
8. Fix issues:
  #+BEGIN_SRC shell
  #icecc - icecream seems to have invoked itself recursively
  export PATH=/usr/lib/ccache:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  export CCACHE_PREFIX=icecc
  #+END_SRC
9. *Plantuml* is great, *emacs org-mode* is great. 
10. VPN address: https://gsou.buzz/ and so on.
11. config coc clangd semanticHighlighting.
{
    "clangd.semanticHighlighting": true
}
12. Volumn control in terminal: alsamixer
13. Add dwm.desktop in /usr/share/xsessions/dwm.desktop
i.e. dwm.desktop
[Desktop Entry]
Encoding=UTF-8
Name=Dwm
Comment=Dynamic window manager
Exec=dwm
Icon=dwm
Type=XSession
14. use xrandr to swap monitor position
  #+BEGIN_SRC shell
  xrandr --output eDP-1 --right-of HDMI-1
  xrandr --auto && xrandr --output eDP-1 --off
  #+END_SRC
15. bluetooth tools: blueman/blueman-manager in ubuntu
16. xrandr monitor setting
  #+BEGIN_SRC shell
  xrandr --output HDMI-1 --primary --mode 1920x1080 --rotate normal --output eDP-1 --mode 1920x1080 --pos 1920x0 --rotate normal
  hc set_monitors 1920x1080+0+0 1920x1080+1920+0
  xsetroot -cursor_name left_ptr
  #+END_SRC
  god use arandr (another xrandr gui)
17. export TERM=xterm-256color
18. sudo cp /etc/nixos/configuration.nix ~/vimrc/dotfiles/nixos/
19. julia --project=~/.julia/environments/nvim-lspconfig -e 'using Pkg; Pkg.add("LanguageServer")'
20. julia config for doom emacs: pkg"add SymbolServer, LanguageServer#master"
21. npm: mkdir ~/.npm-global, npm config set prefix '~/.npm-global', export PATH=~/.npm-global/bin:$PATH
22. 
pip3 install -U pip
pip3 install -U setuptools
pip3 install --no-cache-dir cairocffi
23. run appimage in docker: ~/.local/bin/nvim.appimage --appimage-extract-and-run
    alias nvim="~/.local/bin/nvim.appimage --appimage-extract-and-run"
24. julia install: sudo ln -s /opt/julia-1.6.6/bin/julia /usr/local/bin/julia
25. jill for julia version management
26. bob for neovim version management:
    cargo install --git https://github.com/MordechaiHadad/bob.git
27. 
git config --global user.name "beamiter"
git config --global user.email "beamiter@163.com"
git config --global credential.helper store
28.
cmake -DGFLAGS_NAMESPACE=google -DCMAKE_CXX_FLAGS=-fPIC -DBUILD_SHARED_LIBS=ON ..
29. sudo update-alternatives --config python3
30. https://www.lazyvim.org/installation
31. docker run --rm -ti --net=host -e DISPLAY=$DISPLAY
32. for ocaml developing, use "opam user-setup install" frequently
33. fix vim compile error: CC=clang CXX=clang++ LD=clang LDFLAGS=-fno-lto ./configure ....
    https://stackoverflow.com/questions/53165474/ncurses-library-is-unusable-during-a-vim-build
